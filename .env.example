# ───────── GPT / LangChain API ─────────
OPENAI_API_KEY=sk-apidummy
# LangSmith（後工程で使う場合）
LANGCHAIN_API_KEY=apidummy
LANGCHAIN_TRACING_V2=true          # トレースを有効化
LANGCHAIN_ENDPOINT=https://api.smith.langchain.com
TAVILY_API_KEY = tvly-apidummy # TavilyのAPIキー


# ───────── Google 関連 ─────────
# Drive を API 経由で触る場合、サービスアカウント JSON へのパス
# GDRIVE_KEY_PATH=gdrive_api/curious-striker.json

# RAG 用に Drive をローカルにマウントするパス（Colab なら /content/drive）
# GDRIVE_ROOT=/content/drive

# ───────── アプリ固有 ─────────
# ファインチューニング済みモデル ID（あとで finetune.py が上書き）
FT_MODEL=gpt-4o-mini
EMBEDDING_MODEL=text-embedding-3-small

# ───────── ローカル保存のRAGで試す ─────────
# どこからRAGを読むか: local / drive_desktop / colab
RAG_MODE=local
# RAGスイッチ
FORCE_RAG=true
RAG_FALLBACK=true
ENABLE_RAG=true
RAG_USE_MMR=true
# ルート（WindowsのGoogle Drive for desktop想定。例を自分の環境に合わせて書き換え）
GDRIVE_ROOT= G:\マイドライブ
# ルート直下のどのフォルダをRAG用にするか。このままで問題なし。
RAG_SUBDIR= 
# Chromaの永続先（プロジェクト相対）
CHROMA_DIR=vectorstore

# ベクトルDB
VECTOR_PERSIST_DIR=data/chroma
VECTOR_COLLECTION=kokosan

# RAG を自動で使う閾値（docs がこの件数以上なら強制 RAG）
RAG_AUTO_THRESHOLD=1
RAG_K=6
RAG_FETCH_K=60
